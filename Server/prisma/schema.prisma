generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Role {
  viewer
  salesman
  internal
  admin
  super_admin
}

enum Sender {
  USER
  BOT
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  passwordHash String
  name         String?
  role         Role      @default(viewer)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  chats        Chat[]
  sessions     Session[]
}

model Session {
  id           Int       @id @default(autoincrement())
  userId       Int
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshToken String    @unique
  userAgent    String?
  ip           String?
  createdAt    DateTime  @default(now())
  expiresAt    DateTime
  revokedAt    DateTime?
}

model Chat {
  id        Int       @id @default(autoincrement())
  title     String?
  userId    Int
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  archived  Boolean   @default(false)

  @@index([userId, createdAt])
}

model Message {
  id        Int      @id @default(autoincrement())
  chatId    Int
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  text      String
  sender    Sender
  createdAt DateTime @default(now())

  @@index([chatId, createdAt])
}
